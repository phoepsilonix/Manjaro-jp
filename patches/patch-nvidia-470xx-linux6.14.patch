diff --git a/002-Kbuild-clang-options.patch b/002-Kbuild-clang-options.patch
new file mode 100644
index 0000000..4104744
--- /dev/null
+++ b/002-Kbuild-clang-options.patch
@@ -0,0 +1,25 @@
+diff --git a/Kbuild b/Kbuild
+index e4b91db..6bbee08 100644
+--- a/Kbuild
++++ b/Kbuild
+@@ -69,7 +69,7 @@ $(foreach _module, $(NV_KERNEL_MODULES), \
+ ccflags-y += -std=gnu17
+ ccflags-y += -I$(src)/common/inc
+ ccflags-y += -I$(src)
+-ccflags-y += -Wall -MD $(DEFINES) $(INCLUDES) -Wno-cast-qual -Wno-error -Wno-format-extra-args
++ccflags-y += -Wall $(DEFINES) $(INCLUDES) -Wno-cast-qual -Wno-error -Wno-format-extra-args
+ ccflags-y += -D__KERNEL__ -DMODULE -DNVRM -DNV_VERSION_STRING=\"470.256.02\" -Wno-unused-function -Wuninitialized -fno-strict-aliasing -mno-red-zone -mcmodel=kernel -DNV_UVM_ENABLE
+ ccflags-y += $(call cc-option,-Werror=undef,)
+ ccflags-y += -DNV_SPECTRE_V2=$(NV_SPECTRE_V2)
+diff --git a/Kbuild b/Kbuild
+index 6bbee08..0ae9d77 100644
+--- a/Kbuild
++++ b/Kbuild
+@@ -74,6 +74,7 @@ ccflags-y += -D__KERNEL__ -DMODULE -DNVRM -DNV_VERSION_STRING=\"470.256.02\" -Wn
+ ccflags-y += $(call cc-option,-Werror=undef,)
+ ccflags-y += -DNV_SPECTRE_V2=$(NV_SPECTRE_V2)
+ ccflags-y += -DNV_KERNEL_INTERFACE_LAYER
++ccflags-y += -Wno-error=unused-command-line-argument -Wno-error=strict-prototypes
+ 
+ #
+ # Detect SGI UV systems and apply system-specific optimizations.
diff --git a/PKGBUILD b/PKGBUILD
index 39012a4..533a790 100644
--- a/PKGBUILD
+++ b/PKGBUILD
@@ -15,8 +15,29 @@ groups=("${_linuxprefix}-extramodules")
 depends=("${_linuxprefix}" "nvidia-utils=${pkgver}" 'libglvnd')
 makedepends=("${_linuxprefix}-headers" "nvidia-dkms=$pkgver")
 provides=("nvidia=${pkgver}" 'NVIDIA-MODULE')
+source=(
+002-Kbuild-clang-options.patch
+nvidia-graphics-drivers-legacy-470xx-with-clang-16.patch
+)
+sha256sums=('f2e1bebcc512633a169bed87fb2358e31030d82846fb8a49c2ae853acd0b09f0'
+            '66c191e2228e0bff8a83b86ab1e45161a2ef2d6d2db1f55471b9159ad4d49a00')
 options=(!strip)
 
+prepare() {
+    _kernver="$(cat /usr/src/${_linuxprefix}/version)"
+
+	dkms add --dkmstree "${srcdir}" -m nvidia/${pkgver} -k ${_kernver}
+
+	mkdir -p ${srcdir}/nvidia/${pkgver}/source2/
+	cp -r ${srcdir}/nvidia/${pkgver}/source/* ${srcdir}/nvidia/${pkgver}/source2/
+	#sed -i "s/-MD//" ${srcdir}/nvidia/${pkgver}/source2/Kbuild
+	rm -r ${srcdir}/nvidia/${pkgver}/source
+	ln -s ${srcdir}/nvidia/${pkgver}/source2 ${srcdir}/nvidia/${pkgver}/source
+	cd ${srcdir}/nvidia/${pkgver}/source
+	patch -p1 -i ${srcdir}/002-Kbuild-clang-options.patch
+	patch -p1 -i ${srcdir}/nvidia-graphics-drivers-legacy-470xx-with-clang-16.patch
+}
+
 build() {
     _kernver="$(cat /usr/src/${_linuxprefix}/version)"
 
diff --git a/nvidia-graphics-drivers-legacy-470xx-with-clang-16.patch b/nvidia-graphics-drivers-legacy-470xx-with-clang-16.patch
new file mode 100644
index 0000000..a371740
--- /dev/null
+++ b/nvidia-graphics-drivers-legacy-470xx-with-clang-16.patch
@@ -0,0 +1,45 @@
+diff -ur a/conftest.sh b/conftest.sh
+--- a/conftest.sh	2023-06-01 20:00:46.719933661 +0800
++++ b/conftest.sh	2023-06-01 21:26:23.218584390 +0800
+@@ -255,6 +255,9 @@
+             CFLAGS="$CFLAGS -mfentry -DCC_USING_FENTRY"
+         fi
+     fi
++
++    # Warnings
++    CFLAGS="$CFLAGS -Wno-error=implicit-function-declaration"
+ }
+
+ CONFTEST_PREAMBLE="#include \"conftest/headers.h\"
+@@ -294,6 +297,12 @@
+     echo "$CONFTEST_PREAMBLE
+     $CODE" > conftest$$.c
+
++    if [ -n "$PRINT" ]; then
++        >&2 echo "$CONFTEST_PREAMBLE
++        $CODE"
++        >&2 echo "$CC $CFLAGS -c conftest$$.c"
++    fi
++
+     $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
+     rm -f conftest$$.c
+
+@@ -4765,14 +4812,14 @@
+                 echo "However, mixing compiler versions between the kernel";
+                 echo "and kernel modules can result in subtle bugs that are";
+                 echo "difficult to diagnose.";
+-                echo "";
+-                echo "*** Failed CC version check. Bailing out! ***";
+-                echo "";
++                # echo "";
++                # echo "*** Failed CC version check. Bailing out! ***";
++                # echo "";
+             elif [ "$VERBOSE" = "just_msg" ]; then
+                 echo "The kernel was built with ${kernel_cc_string}, but the" \
+                      "current compiler version is `$CC --version | head -n 1`.";
+             fi
+-            exit 1;
++            exit 0;
+         fi
+     ;;
+
